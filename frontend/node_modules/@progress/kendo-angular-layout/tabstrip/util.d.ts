/**-----------------------------------------------------------------------------------------
* Copyright Â© 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, QueryList } from "@angular/core";
import { TabStripScrollableSettings } from './models/scrollable-settings';
import { TabStripTabComponent } from "./models/tabstrip-tab.component";
import { TabPosition } from './models/tab-position';
/**
 * @hidden
 *
 * Checks if the current target is a TabStrip tab element
 */
export declare const isTabElement: (target: any) => boolean;
/**
 * @hidden
 *
 * Checks if the current tab is closable. Depends on the value of the TabStrip closable property.
 */
export declare const isTabClosable: (tab: TabStripTabComponent, tabStripClosable: boolean) => boolean;
/**
 * @hidden
 *
 * Checks if the TabStrip scroll buttons will be rendered. Depends on the value of the TabStrip scrollable settings.
 */
export declare const tabStripHasScrollButtons: (scrollableSettings: TabStripScrollableSettings) => boolean;
/**
 * @hidden
 *
 * Checks if the TabStrip mouse scroll will be enabled. Depends on the value of the TabStrip scrollable settings.
 */
export declare const mouseScrollEnabled: (scrollableSettings: TabStripScrollableSettings) => boolean;
/**
 * @hidden
 *
 * Retrieves the current active tab element and its index.
 * This could either be the currently selected tab or the currently focused tab.
 */
export declare const getActiveTab: (tabs: QueryList<TabStripTabComponent>) => {
    tab: TabStripTabComponent;
    index: number;
};
/**
 * @hidden
 */
export declare const getTabByIndex: (tabs: QueryList<TabStripTabComponent>, index: number) => TabStripTabComponent;
/**
 * @hidden
 */
export declare const getTabHeaderByIndex: (tabHeaderContainers: QueryList<ElementRef<HTMLLIElement>>, index: number) => ElementRef<HTMLLIElement>;
/**
 * @hidden
 */
export declare const resetTabFocus: (tabs: QueryList<TabStripTabComponent>) => void;
/**
 * @hidden
 */
export declare const resetTabSelection: (tabs: QueryList<TabStripTabComponent>) => void;
/**
 * @hidden
 */
export declare const isTablistHorizontal: (tabPosition: TabPosition) => boolean;
/**
 * @hidden
 */
export declare const getId: (prefix: string, tabStripId: string, tabIndex: number) => string;
