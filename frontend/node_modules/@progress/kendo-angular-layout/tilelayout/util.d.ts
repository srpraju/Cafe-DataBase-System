/**-----------------------------------------------------------------------------------------
* Copyright Â© 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Renderer2 } from '@angular/core';
import { TileLayoutItemComponent } from './tilelayout-item.component';
import { TileLayoutGap } from './models/gap.interface';
import { DraggingServiceConfig } from './models/dragging-config.interface';
import { TileLayoutNavigation } from './models/navigation.interface';
/**
 * @hidden
 */
export declare const getId: (prefix: string) => string;
/**
 * @hidden
 */
export declare const normalizeValue: (value: any) => number;
/**
 * @hidden
 */
export declare const isRowItemPresent: (items: TileLayoutItemComponent[]) => boolean;
/**
 * @hidden
 */
export declare const propsChanged: (initialProps: any[], newProps: any[]) => boolean;
/**
 * @hidden
 *
 * Extracts the event target from the viewport coords. Required for touch devices
 * where the `event.target` of a `pointermove` event is always the initially dragged item.
 */
export declare const getDropTarget: (event: PointerEvent) => HTMLElement[];
/**
 * @hidden
 */
export declare const setElementStyles: (renderer: Renderer2, elem: HTMLElement, styles: object) => void;
/**
 * @hidden
 */
export declare const calculateCellFromPosition: (coordinates: {
    x: number;
    y: number;
}, tileLayoutElement: HTMLElement, gap: TileLayoutGap, cellSize: {
    width: number;
    height: number;
}, columns: number, rtl?: boolean) => {
    row: number;
    col: number;
};
/**
 * @hidden
 */
export declare const calculateOrderFromCell: (row: number, col: number, items: TileLayoutItemComponent[], draggedItem: TileLayoutItemComponent, tileLayoutElement: HTMLElement, gap: TileLayoutGap, cellSize: {
    width: number;
    height: number;
}, columns: number) => number;
/**
 * @hidden
 */
export declare const shouldResize: (keyCode: number, col: number, selectedTile: TileLayoutItemComponent, settings: DraggingServiceConfig) => TileLayoutNavigation;
/**
 * @hidden
 */
export declare const shouldReorder: (keyCode: number, col: number, selectedTile: TileLayoutItemComponent, settings: DraggingServiceConfig) => TileLayoutNavigation;
/**
 * @hidden
 */
export declare const getCurrentCol: (selectedTile: TileLayoutItemComponent, settings: DraggingServiceConfig, rtl: any) => number;
