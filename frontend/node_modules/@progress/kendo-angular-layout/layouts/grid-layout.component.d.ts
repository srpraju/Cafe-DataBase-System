/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Renderer2, ElementRef, AfterViewInit, SimpleChanges, OnChanges } from '@angular/core';
import { GridLayoutGapSettings, AlignSettings } from './models';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import * as i0 from "@angular/core";
/**
 * Represents the [Kendo UI GridLayout component for Angular]({% slug overview_gridlayout %}).
 */
export declare class GridLayoutComponent implements AfterViewInit, OnChanges {
    private renderer;
    private element;
    private localization;
    hostClass: boolean;
    get dir(): string;
    /**
     * Specifies the number of rows and their height
     * ([More details]({% slug layout_gridlayout %}#toc-rows-and-columns)).
     *
     * Accepts an array, which serves two purposes:
     *
     * The number of elements in the array defines the number of rows.
     * Each array element defines the size of the corresponding row. The possible array values are:
     * * `number` - Defines the size in pixels.
     * * `string` - Enables the usage of arbitrary units e.g. `20%` or `auto`.
     * * [GridLayoutRowSize]({% slug api_layout_gridlayoutrowsize %}) - Configuration object, which accepts a `height` key.
     */
    rows: Array<any>;
    /**
     * Specifies the number of columns and their widths
     * ([More details]({% slug layout_gridlayout %}#toc-rows-and-columns)).
     *
     * Accepts an array, which serves two purposes:
     *
     * The number of elements in the array defines the number of columns.
     * Each array element defines the size of the corresponding column. The possible array values are:
     * * `number` - Defines the size in pixels.
     * * `string` - Enables the usage of arbitrary units e.g. `20%` or `auto`.
     * * [GridLayoutColSize]({% slug api_layout_gridlayoutcolsize %}) - Configuration object, which accepts a `width` key.
     */
    cols: Array<any>;
    /**
     * Specifies the gaps between the elements. The default value is `0`
     * ([see example]({% slug layout_gridlayout %}#toc-gaps)).
     */
    gap: number | string | GridLayoutGapSettings;
    /**
     * Specifies the horizontal and vertical alignment of the inner GridLayout elements
     * ([see example]({% slug layout_gridlayout %}#toc-alignment)).
     */
    set align(align: AlignSettings);
    get align(): AlignSettings;
    private _align;
    private justifyClass;
    private alignClass;
    constructor(renderer: Renderer2, element: ElementRef, localization: LocalizationService);
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private handleAlignClasses;
    private setGap;
    private handleGridTemplateStyling;
    private get direction();
    static ɵfac: i0.ɵɵFactoryDeclaration<GridLayoutComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<GridLayoutComponent, "kendo-gridlayout", ["kendoGridLayout"], { "rows": "rows"; "cols": "cols"; "gap": "gap"; "align": "align"; }, {}, never, ["*"]>;
}
