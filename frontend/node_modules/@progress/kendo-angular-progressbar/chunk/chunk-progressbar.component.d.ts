/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ProgressBarBase } from '../common/progressbar-base';
import { ElementRef, Renderer2 } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import * as i0 from "@angular/core";
/**
 * Represents the [Kendo UI ChunkProgressBar component for Angular]({% slug overview_chunkprogressbar %}).
 *
 * @example
 * ```ts-preview
 * _@Component({
 *    selector: 'my-app',
 *    template: `
 *        <kendo-chunkprogressbar [value]="value">
 *        </kendo-chunkprogressbar>
 *    `
 * })
 * class AppComponent {
 *     public value = 40;
 * }
 * ```
 */
export declare class ChunkProgressBarComponent extends ProgressBarBase {
    localization: LocalizationService;
    elem: ElementRef;
    renderer: Renderer2;
    chunkClass: boolean;
    /**
     * Sets the number of chunks into which the ChunkProgressBar will be split.
     * Defaults to `5`.
     */
    chunkCount: number;
    /**
     * @hidden
     */
    get chunks(): boolean[];
    /**
     * The CSS styles that will be rendered on the full chunk elements ([see example]({% slug chunkprogressbar_appearance %})).
     * Supports the type of values that are supported by [`ngStyle`](link:site.data.urls.angular['ngstyleapi']).
     */
    progressCssStyle: {
        [key: string]: any;
    };
    /**
     * The CSS classes that will be rendered on the full chunk elements ([see example]({% slug chunkprogressbar_appearance %})).
     * Supports the type of values that are supported by [`ngClass`](link:site.data.urls.angular['ngclassapi']).
     */
    progressCssClass: string | string[] | Set<string> | {
        [key: string]: string;
    };
    /**
     * The CSS styles that will be rendered on the empty chunk elements ([see example]({% slug chunkprogressbar_appearance %})).
     * Supports the type of values that are supported by [`ngStyle`](link:site.data.urls.angular['ngstyleapi']).
     */
    emptyCssStyle: {
        [key: string]: string;
    };
    /**
     * The CSS classes that will be rendered on the empty chunk elements ([see example]({% slug chunkprogressbar_appearance %})).
     * Supports the type of values that are supported by [`ngClass`](link:site.data.urls.angular['ngclassapi']).
     */
    emptyCssClass: string | string[] | Set<string> | {
        [key: string]: any;
    };
    /**
     * @hidden
     */
    get chunkSizePercentage(): number;
    /**
     * @hidden
     */
    get orientationStyles(): {
        width: string;
        height: string;
    };
    private _orientationStyles;
    /**
     * @hidden
     */
    constructor(localization: LocalizationService, elem: ElementRef, renderer: Renderer2);
    static ɵfac: i0.ɵɵFactoryDeclaration<ChunkProgressBarComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ChunkProgressBarComponent, "kendo-chunkprogressbar", ["kendoChunkProgressBar"], { "chunkCount": "chunkCount"; "progressCssStyle": "progressCssStyle"; "progressCssClass": "progressCssClass"; "emptyCssStyle": "emptyCssStyle"; "emptyCssClass": "emptyCssClass"; }, {}, never, never>;
}
