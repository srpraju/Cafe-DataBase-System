/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { OnChanges, SimpleChanges, ElementRef, Renderer2 } from '@angular/core';
import { Subscription } from 'rxjs';
import { ProgressBarOrientation } from '../types/progressbar-orientation';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export declare abstract class ProgressBarBase implements OnChanges {
    protected elem: ElementRef;
    protected renderer: Renderer2;
    protected localization: LocalizationService;
    hostClasses: boolean;
    get isHorizontal(): boolean;
    get isVertical(): boolean;
    get disabledClass(): boolean;
    get reverseClass(): boolean;
    get indeterminateClass(): boolean;
    get dirAttribute(): string;
    roleAttribute: string;
    get ariaMinAttribute(): string;
    get ariaMaxAttribute(): string;
    get ariaValueAttribute(): string;
    /**
     * The maximum value of the ProgressBar.
     * Defaults to `100`.
     */
    max: number;
    /**
     * The minimum value of the ProgressBar.
     * Defaults to `0`.
     */
    min: number;
    /**
     * The value of the ProgressBar.
     * Has to be between `min` and `max`.
     * By default, the value is equal to the `min` value.
     */
    /**
     * The value of the ProgressBar.
     * Has to be between `min` and `max`.
     * Defaults to `0`.
     */
    value: number;
    /**
     * @hidden
     */
    get isCompleted(): boolean;
    /**
     * @hidden
     */
    get statusWidth(): number;
    /**
     * @hidden
     */
    get statusHeight(): number;
    /**
     * @hidden
     */
    get statusWrapperWidth(): number;
    /**
     * @hidden
     */
    get statusWrapperHeight(): number;
    protected get _progressRatio(): number;
    /**
     * Defines the orientation of the ProgressBar
     * ([see example]({% slug progressbar_orientation %})).
     * Defaults to `horizontal`.
     */
    orientation: ProgressBarOrientation;
    /**
     * If set to `true`, the ProgressBar will be disabled
     * ([see example]({% slug progressbar_disabled %})).
     * It will still allow you to change its value.
     * Defaults to `false`.
     */
    disabled: boolean;
    /**
     * If set to `true`, the ProgressBar will be reversed
     * ([see example]({% slug progressbar_direction %})).
     * Defaults to `false`.
     */
    reverse: boolean;
    /**
     * Sets the `indeterminate` state of the ProgressBar.
     * Defaults to `false`.
     */
    indeterminate: boolean;
    protected direction: string;
    protected localizationChangeSubscription: Subscription;
    protected displayValue: number;
    protected previousValue: number;
    /**
     * @hidden
     */
    constructor(elem: ElementRef, renderer: Renderer2, localization: LocalizationService);
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProgressBarBase, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ProgressBarBase, "ng-component", never, { "max": "max"; "min": "min"; "value": "value"; "orientation": "orientation"; "disabled": "disabled"; "reverse": "reverse"; "indeterminate": "indeterminate"; }, {}, never, never>;
}
