/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Specifies the adornments in the prefix container of the [Inputs]({% slug adornments_textbox %}#toc-prefixadornments) and [DropDowns]({% slug adornments_multiselect %}#toc-prefixadornments).
 * ```ts-no-run
 * _@Component({
 * selector: 'my-app',
 * template: `
 *  <kendo-textbox>
 *      <ng-template kendoPrefixTemplate>
 *          <button kendoButton look="clear" icon="image"></button>
 *      </ng-template>
 *  </kendo-textbox>
 *
 *  <kendo-multiselect [data]="data" [(ngModel)]="value">
 *      <ng-template kendoPrefixTemplate>
 *          <button kendoButton look="clear" icon="image"></button>
 *      </ng-template>
 *  </kendo-multiselect>
 * `
 * })
 * class AppComponent {}
 * ```
 */
export declare class PrefixTemplateDirective {
    templateRef: TemplateRef<any>;
    /**
     * Sets the `showSeparator` attribute of the `prefixTemplate`.
     *
     * @default false
     */
    set showSeparator(value: boolean);
    get showSeparator(): boolean;
    private _showSeparator;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<PrefixTemplateDirective, [{ optional: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<PrefixTemplateDirective, "[kendoPrefixTemplate]", never, { "showSeparator": "showSeparator"; }, {}, never>;
}
