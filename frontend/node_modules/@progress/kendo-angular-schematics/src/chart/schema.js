/**-----------------------------------------------------------------------------------------
* Copyright Â© 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isCategoricalRange = exports.isCategorical = exports.CategoryAxisType = exports.ValueAxisType = exports.CategoricalChartType = exports.DataSource = void 0;
var DataSource;
(function (DataSource) {
    /**
     * An example data source will be added to the project with predefined column definitions.
     * The data and column definitions can not be modified.
     *
     * This is the default.
     */
    DataSource["Example"] = "Example";
    /**
     * The user is expected to provide column definitions.
     * A mock data will be generated out of the column definitions.
     */
    DataSource["Mock Data"] = "Mock Data";
    /**
     * The user can specify a basic module to bind to and provide column definitions,
     * but in general the user will have to author some code to connect the data.
     */
    DataSource["Existing App Data"] = "Existing App Data";
})(DataSource = exports.DataSource || (exports.DataSource = {}));
;
var CategoricalChartType;
(function (CategoricalChartType) {
    CategoricalChartType["area"] = "area";
    CategoricalChartType["bar"] = "bar";
    CategoricalChartType["bullet"] = "bullet";
    CategoricalChartType["column"] = "column";
    CategoricalChartType["horizontalWaterfall"] = "horizontalWaterfall";
    CategoricalChartType["line"] = "line";
    CategoricalChartType["radarArea"] = "radarArea";
    CategoricalChartType["radarColumn"] = "radarColumn";
    CategoricalChartType["radarLine"] = "radarLine";
    CategoricalChartType["rangeArea"] = "rangeArea";
    CategoricalChartType["rangeBar"] = "rangeBar";
    CategoricalChartType["rangeColumn"] = "rangeColumn";
    CategoricalChartType["waterfall"] = "waterfall";
})(CategoricalChartType = exports.CategoricalChartType || (exports.CategoricalChartType = {}));
var ValueAxisType;
(function (ValueAxisType) {
    ValueAxisType["numeric"] = "numeric";
    ValueAxisType["log"] = "log";
})(ValueAxisType = exports.ValueAxisType || (exports.ValueAxisType = {}));
var CategoryAxisType;
(function (CategoryAxisType) {
    CategoryAxisType["category"] = "category";
    CategoryAxisType["date"] = "date";
})(CategoryAxisType = exports.CategoryAxisType || (exports.CategoryAxisType = {}));
function isCategorical(chart) {
    return chart.chartType == "area" ||
        chart.chartType == "bar" ||
        chart.chartType == "bullet" ||
        chart.chartType == "column" ||
        chart.chartType == "horizontalWaterfall" ||
        chart.chartType == "line" ||
        chart.chartType == "radarArea" ||
        chart.chartType == "radarColumn" ||
        chart.chartType == "radarLine" ||
        chart.chartType == "waterfall";
}
exports.isCategorical = isCategorical;
function isCategoricalRange(chart) {
    return chart.chartType == "rangeArea" || chart.chartType == "rangeBar" || chart.chartType == "rangeColumn";
}
exports.isCategoricalRange = isCategoricalRange;
//# sourceMappingURL=schema.js.map