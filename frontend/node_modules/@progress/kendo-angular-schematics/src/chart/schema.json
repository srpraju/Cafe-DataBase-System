{
	"progress:name": "Chart",
	"progress:description": "Generate new Kendo UI for Angular Chart page",
	"$schema": "http://json-schema.org/schema",
	"$id": "KendoAngularChart",
	"type": "object",
	"properties": {
		"path": {
			"type": "string",
			"format": "path",
			"$default": {
				"$source": "workingDirectory"
			},
			"description": "The path at which to create the component file, relative to the current workspace. Default is a folder with the same name as the component in the project root.",
			"visible": false,
			"progress:editorVisible": false
		},
		"project": {
			"type": "string",
			"description": "The name of the project.",
			"$default": {
				"$source": "projectName"
			},
			"progress:editorVisible": false
		},
		"name": {
			"type": "string",
			"description": "The name of the component.",
			"$default": {
				"$source": "argv",
				"index": 0
			},
			"default": "Chart",
			"x-prompt": "What name would you like to use for the component?"
		},
		"module": {
			"type": "string",
			"description": "The declaring NgModule.",
			"alias": "m",
			"progress:editorVisible": false
		},
		"selector": {
			"type": "string",
			"format": "html-selector",
			"description": "The HTML selector to use for this component.",
			"progress:editorVisible": false
		},
		"type": {
			"type": "string",
			"description": "Adds a developer-defined type to the filename, in the format \"name.type.ts\".",
			"default": "Component",
			"progress:editorVisible": false
		},
		"displayBlock": {
			"description": "Specifies if the style will contain `:host { display: block; }`.",
			"type": "boolean",
			"default": false,
			"alias": "b",
			"progress:editorVisible": false
		},
		"standalone": {
			"description": "Whether the generated component is standalone.",
			"type": "boolean",
			"x-user-analytics": 15,
			"progress:editorVisible": false,
			"progress:angular-default": {
				"<17": false,
				">=17": true
			}
		},
		"changeDetection": {
			"description": "The change detection strategy to use in the new component.",
			"enum": ["Default", "OnPush"],
			"type": "string",
			"default": "Default",
			"alias": "c",
			"progress:editorVisible": false
		},
		"viewEncapsulation": {
			"description": "The view encapsulation strategy to use in the new component.",
			"enum": ["Emulated", "None", "ShadowDom"],
			"type": "string",
			"alias": "v",
			"x-user-analytics": 11,
			"progress:editorVisible": false
		},
		"skipSelector": {
			"type": "boolean",
			"default": false,
			"description": "Specifies if the component should have a selector or not.",
			"progress:editorVisible": false
		},

		"inlineTemplate": {
			"progress:category": "Code Generation",
			"progress:display-name": "Inline template",
			"description": "Include template inline in the component.ts file. By default, an external template file is created and referenced in the component.ts file.",
			"type": "boolean",
			"default": false,
			"alias": "t"
		},
		"style": {
			"description": "The file extension or preprocessor to use for style files, or 'none' to skip generating the style file.",
			"type": "string",
			"default": "css",
			"enum": ["css", "scss", "sass", "less", "none"],
			"x-user-analytics": "ep.ng_style"
		},
		"inlineStyle": {
			"progress:category": "Code Generation",
			"description": "Include styles inline in the component.ts file. Only CSS styles can be included inline. By default, an external styles file is created and referenced in the component.ts file.",
			"type": "boolean",
			"default": false,
			"alias": "s"
		},
		"skipTests": {
			"progress:category": "Code Generation",
			"type": "boolean",
			"description": "Do not create \"spec.ts\" test files for the new component.",
			"default": false
		},
		"chartType": {
			"type": "string",
			"displayName": "Chart Type",
			"enum": [
				"bar",
				"area",
				"scatter",
				"stock",
				"pie",
				"donut",
				"bullet",
				"column",
				"line",
				"radarArea",
				"radarColumn",
				"radarLine",
				"rangeArea",
				"rangeBar",
				"rangeColumn",
				"waterfall",
				"horizontalWaterfall"
			],
			"default": "bar",
			"description": "Choose your Chart type.",
			"progress:attributes": [{ "type": "chartTypeEditorList" }]
		},

		"renderAs": {
			"progress:category": "Chart Options",
            "type": "string",
            "enum": [ "svg", "canvas" ],
			"default": "svg"
        },

		"title": {
			"progress:category": "Chart Options",
			"type": "boolean",
			"default": true
		},
		"legend": {
			"progress:category": "Chart Options",
			"type": "boolean",
			"default": true
		},

		"time": {
			"progress:category": "Data",
			"description": "Time charts do not group in discrete categories but show data over continuous time range.",
			"type": "boolean",
			"default": false,
			"progress:attributes": [{ "type": "hideOnPropertyValue", "property": "chartType", "values": [ "stock", "scatter" ] }]
		},
		"navigator": {
			"progress:category": "Data",
			"description": "Time charts do not group in discrete categories but show data over continuous time range.",
			"type": "boolean",
			"default": true,
			"progress:attributes": [{ "type": "hideOnPropertyValue", "property": "chartType", "values": [
				"bar",
				"area",
				"scatter",
				"pie",
				"donut",
				"bullet",
				"column",
				"line",
				"radarArea",
				"radarColumn",
				"radarLine",
				"rangeArea",
				"rangeBar",
				"rangeColumn",
				"waterfall",
				"horizontalWaterfall"
			]}]
		},
		"log": {
			"progress:category": "Data",
			"description": "Use logarithmic scale for the single value axis.",
			"type": "boolean",
			"default": false,
			"progress:attributes": [{ "type": "hideOnPropertyValue", "property": "chartType", "values": [ "scatter" ] }]
		},

		"category": {
			"progress:category": "Data",
			"description": "The category name of the single category axis chart. Example: Products, Vehicles, Countries...",
			"type": "string",
			"progress:attributes": [{ "type": "hideOnPropertyValue", "property": "chartType", "values": [ "scatter" ] }]
		},
		"categories": {
			"progress:category": "Data",
			"type": "array",
			"items": { "type": "string" },
			"progress:attributes": [
				{ "type": "hideOnPropertyValue", "property": "time", "values": [ true ] },
				{ "type": "hideOnPropertyValue", "property": "chartType", "values": [ "stock", "scatter" ] }
			]
		},
		"series": {
			"progress:category": "Data",
			"type": "array",
			"items": { "type": "string" },
			"progress:attributes": [{ "type": "hideOnPropertyValue", "property": "chartType", "values": [ "scatter", "pie", "donut" ] }]
		},

		"value": {
			"progress:category": "Data",
			"description": "The value name of the single value axis chart. Example: Price, Sales, Temperature...",
			"type": "string",
			"progress:attributes": [{ "type": "hideOnPropertyValue", "property": "chartType", "values": [ "scatter" ] }]
		}
	},
	"required": [
		"name"
	]
}
