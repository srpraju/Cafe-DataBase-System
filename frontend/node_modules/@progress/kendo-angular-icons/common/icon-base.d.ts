/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, Renderer2 } from '@angular/core';
import { IconThemeColor } from './models/theme-color';
import { IconSize } from './models/size';
import { IconFlip } from './models/flip';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export declare abstract class IconBaseDirective {
    element: ElementRef;
    renderer: Renderer2;
    get horizontalFlip(): boolean;
    get verticalFlip(): boolean;
    /**
     * Flips the icon horizontally, vertically or in both directions.
     */
    flip: IconFlip;
    /**
     * Specifies the theme color for the Icon.
     *
     * The possible values are:
     * * `inherit` (Default)&mdash;Applies coloring based on the current color.
     * * `primary` &mdash;Applies coloring based on primary theme color.
     * * `secondary`&mdash;Applies coloring based on secondary theme color.
     * * `tertiary`&mdash; Applies coloring based on tertiary theme color.
     * * `info`&mdash;Applies coloring based on info theme color.
     * * `success`&mdash; Applies coloring based on success theme color.
     * * `warning`&mdash; Applies coloring based on warning theme color.
     * * `error`&mdash; Applies coloring based on error theme color.
     * * `dark`&mdash; Applies coloring based on dark theme color.
     * * `light`&mdash; Applies coloring based on light theme color.
     * * `inverse`&mdash; Applies coloring based on inverse theme color.
     *
     */
    set themeColor(themeColor: IconThemeColor);
    get themeColor(): IconThemeColor;
    /**
     * Specifies the size of the Icon.
     *
     * The possible values are:
     * * `default` (Default) (Font-size: 16px; Width: 16px; Height: 16px)
     * * `xsmall` (Font-size: 12px; Width: 12px; Height: 12px;)
     * * `small` (Font-size: 14px; Width: 14px; Height: 14px;)
     * * `medium` (Font-size: 16px; Width: 16px; Height: 16px;)
     * * `large` (Font-size: 20px; Width: 20px; Height: 20px;)
     * * `xlarge` (Font-size: 24px; Width: 24px; Height: 24px;)
     * * `xxlarge` (Font-size: 32px; Width: 32px; Height: 32px;)
     * * `xxxlarge` (Font-size: 48px; Width: 48px; Height: 48px;)
     *
     */
    set size(size: IconSize);
    get size(): IconSize;
    _themeColor: IconThemeColor;
    _size: IconSize;
    constructor(element: ElementRef, renderer: Renderer2);
    static ɵfac: i0.ɵɵFactoryDeclaration<IconBaseDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IconBaseDirective, "[kendoIconBase]", never, { "flip": "flip"; "themeColor": "themeColor"; "size": "size"; }, {}, never>;
}
