/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Component, ElementRef, Input, Renderer2, HostBinding, isDevMode } from '@angular/core';
import { DomSanitizer } from "@angular/platform-browser";
import { isDocumentAvailable } from '@progress/kendo-angular-common';
import { IconBaseDirective } from '../common/icon-base';
import * as i0 from "@angular/core";
import * as i1 from "@angular/platform-browser";
import * as i2 from "@angular/common";
/**
 * Represents the Kendo UI SVG Icon component for Angular.
 */
export class SVGIconComponent extends IconBaseDirective {
    constructor(domSanitizer, element, renderer) {
        super(element, renderer);
        this.domSanitizer = domSanitizer;
        this.element = element;
        this.renderer = renderer;
        this.hostClass = true;
        this.hostAriaHidden = true;
    }
    /**
     * Defines the SVG icon, which will be rendered. All [Kendo UI SVG Icons](slug:svgicon_list) are supported.
     */
    set icon(icon) {
        const element = this.element.nativeElement;
        const hasDocument = isDocumentAvailable();
        if (this._icon && this._icon.name && hasDocument) {
            this.renderer.removeClass(element, `k-svg-i-${this._icon.name}`);
        }
        this._icon = icon;
        if (hasDocument) {
            this.renderer.addClass(element, `k-svg-i-${this._icon.name}`);
        }
    }
    get icon() {
        return this._icon;
    }
    get content() {
        return this.domSanitizer.bypassSecurityTrustHtml(this.icon.content);
    }
    get visible() {
        return this.icon && isDocumentAvailable();
    }
    ngOnInit() {
        this.verifyIconProperty();
    }
    verifyIconProperty() {
        if (!isDevMode()) {
            return;
        }
        if (!this._icon) {
            throw new Error(`
                Invalid configuration.
                The input [icon] is required for the Kendo UI SVG Icon component for Angular.
                See https://www.telerik.com/kendo-angular-ui/components/icons/svg-icon
            `);
        }
    }
}
SVGIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: SVGIconComponent, deps: [{ token: i1.DomSanitizer }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });
SVGIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.12", type: SVGIconComponent, selector: "kendo-svg-icon, kendo-svgicon", inputs: { icon: "icon" }, host: { properties: { "class.k-svg-icon": "this.hostClass", "class.k-icon": "this.hostClass", "attr.aria-hidden": "this.hostAriaHidden" } }, exportAs: ["kendoSVGIcon"], usesInheritance: true, ngImport: i0, template: `
        <svg [style.pointerEvents]="'none'" *ngIf="visible" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
             [attr.viewBox]="icon.viewBox" [innerHTML]="content">
        </svg>`, isInline: true, directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: SVGIconComponent, decorators: [{
            type: Component,
            args: [{
                    exportAs: 'kendoSVGIcon',
                    selector: 'kendo-svg-icon, kendo-svgicon',
                    template: `
        <svg [style.pointerEvents]="'none'" *ngIf="visible" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
             [attr.viewBox]="icon.viewBox" [innerHTML]="content">
        </svg>`
                }]
        }], ctorParameters: function () { return [{ type: i1.DomSanitizer }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { hostClass: [{
                type: HostBinding,
                args: ['class.k-svg-icon']
            }, {
                type: HostBinding,
                args: ['class.k-icon']
            }], hostAriaHidden: [{
                type: HostBinding,
                args: ['attr.aria-hidden']
            }], icon: [{
                type: Input
            }] } });
